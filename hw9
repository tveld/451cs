Title         : CS 451: Superscalar Homework
Author        : Troy Veldhuizen

[TITLE]

1.  This problem explores the benefit of the predication technique discussed in class.
    a. Write the straightforward MIPS assembly for the following segment of code. Assume all variables are already loaded in registers.
      - `bne $t0, $t1, ELSE`\
        `addi $t2, $t2, 10`\
        `ELSE:`\
        `add $t3, $t4, $t5`
   b. On average, how many cycles does this segment of code require if
      - If the condition is true half of the time,
      - The branch predictor is 90% accurate, and
      - The branch penalty is 7 cycles.\
      
      ~ Math
      \begin{aligned}
         cycles &= 1 + (.9)(1) + (.1)(7 + 1)
                &= 1 + (.9) + (.8)
                &= 2.7
     \end{aligned}
    ~
    c. Now suppose your CPU has the following new features:
      - a cmp r1, r2 instruction that compares r1 and r2 and store the result in a special-purpose register.
      - predicated arithmetic instructions (e.g., add eq and add ne) that will store the result of the instruction only if the previous cmp instruction returned the indicated value.\
      Rewrite your assembly code form part 1a using these new features\
      `cmp $t0, $t1`\
      `addi_eq $t2, $t2, 10`\
      `add_ne $t3, $t4, $t5`
   d. On average, how many cycles does your predicated code take?
      - The first `cmp` instruction will take $1$ cycle, but the following $2$ add instructions can be parallelized to take $1$ cycle. It would take a total of $2$ cycles.
  e.  At what accuracy is the standard MIPS code more efficient than the predicated code?
      - Two cycles is the absolute minimum time the if statement can be evaluated. The predicated code will always run in that time, and standard mips will run in that time if it can predict 100% of the time. However, this is not likely.
